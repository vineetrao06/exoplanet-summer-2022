# -*- coding: utf-8 -*-
"""Copy of Exoplanet

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O8iJffgHYvAaD26611lR2SqPSuvLiKmt
"""

import pandas as pd
import math

# TODO: ADD MORE ATTRIBUTES TO MATCH TO K2-18 b (semi-major and minor axes, orbital period, eccentricity, etc.)
# So far, the only accounted attributes are spectral type and density

# TODO: Look into 'pl_bmassj', it has 1747 values, while 'pl_massj' only has 966 values
# Only caveat is that 'pl_bmassj' has mass measured in diff ways (check column definitions)

url = 'https://raw.githubusercontent.com/allench36/NASA-Caltech-Exoplanet-Archive/master/updatedexoplanet.csv'

exo = pd.read_csv(url)

pd.set_option('display.max_columns', None, 'display.max_rows', None)
pd.options.mode.chained_assignment = None

# create a new dataframe for planets without a density value but with jupiter mass and jupiter radii values
new_exo = exo[(exo['pl_dens'].isnull()) & (exo['pl_radj'].notnull()) & (exo['pl_massj'].notnull())]
# calculate the densities (g/cm^3)
new_exo['pl_dens'] = (new_exo['pl_massj'] * (1.898 * (10**27) * 1000)) / (4 * math.pi * ((new_exo['pl_radj'] * 43441 * 160934)**3) / 3)

# this is just to give an idea of the amount of blanks in the dataset
print("Total Number of Planets with Density Values (that we can access as of right now): ", new_exo['pl_dens'].count() + exo['pl_dens'].count())
print("Total Number of Planets: ", exo['pl_name'].count())
print("Percentage of Planets with accessible Density Values: ", round((new_exo['pl_name'].count() + exo['pl_dens'].count()) /
      exo['pl_name'].count() * 100, 2), "%\n")

# filter new dataframe using spectral type M (K2-18b's host star type) & earth-like density (K2-18b's density is ~4 g/cm^3, which constitutes a rocky planet)
new_exo = new_exo.loc[(new_exo['st_spstr'].str.contains('M', na=False)) & (new_exo['pl_dens'] >= 4) & (new_exo['pl_dens'] <= 7)]
new_exo.reset_index(drop=True, inplace=True)
# print number of planet matches
print("Planets Orbiting M-type Star with Calculated Densities 4-7 g/cm^3: ", new_exo['pl_dens'].count())
# print planet names
print(new_exo['pl_name'])

# filter original dataframe with same criteria
exo = exo.loc[(exo['st_spstr'].str.contains('M', na=False)) & (exo['pl_dens'] >= 4) & (exo['pl_dens'] <= 7)]
exo.reset_index(drop=True, inplace=True)
# print number of planet matches
print("\nPlanets Orbiting M-type Star with Existing Densities 4-7 g/cm^3: ", exo['pl_dens'].count())
# print planet names
print(exo['pl_name'])

